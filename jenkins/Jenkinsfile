pipeline {
    agent any

    // Define a global environment variable for the DB admin password and domain name.
    // This is less ideal for production (Key Vault integration is better), but works for this setup.
    environment {
        TF_VAR_admin_password = "Ap20120805877" // !! IMPORTANT: Ensure this is your actual strong password !!
        TF_VAR_domain_name    = "manikonda.ca"
    }

    stages {
        stage('Terraform Operations') {
            steps {
                script {
                    dir('multi-region-dr') {
                        // CHANGE THIS LINE: Use 'azure-sp-creds' as the credentials ID
                        withCredentials([azureServicePrincipal('azure-sp-creds')]) {

                            sh """
                                terraform init \\
                                    -backend-config="resource_group_name=tfstate-manikonda-rg-unique" \\
                                    -backend-config="storage_account_name=tfstatemanikonda01" \\
                                    -backend-config="container_name=tfstate" \\
                                    -backend-config="key=multi-region-dr.tfstate"
                            """

                            sh """
                                terraform plan -out=tfplan \\
                                    -var "subscription_id=${AZURE_SUBSCRIPTION_ID}" \\
                                    -var "tenant_id=${AZURE_TENANT_ID}" \\
                                    -var "client_id=${AZURE_CLIENT_ID}" \\
                                    -var "client_secret=${AZURE_CLIENT_SECRET}"
                            """

                            def userInput = input(id: 'proceed', message: 'Proceed with Terraform Apply?', ok: 'Apply')
                            if (userInput == 'Apply') {
                                sh 'terraform apply -auto-approve tfplan'
                            } else {
                                error('Terraform apply cancelled by user.')
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                dir('multi-region-dr') {
                    sh 'rm -f tfplan'
                }
            }
        }
        success {
            echo 'Terraform deployment successful!'
        }
        failure {
            echo 'Terraform deployment failed!'
        }
    }
}

